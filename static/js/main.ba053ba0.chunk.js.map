{"version":3,"sources":["components/misc/notifications.js","views/view.controller.js","components/header/header.js","components/misc/custom.spinner.js","components/user/user.info.js","components/user/user.login.js","views/user.js","components/budgets/add.budgets/add.budgets.form.js","components/budgets/add.budgets/add.budgets.button.js","components/budgets/list.budgets/list.budgets.item.js","components/budgets/list.budgets/list.budgets.js","components/budgets/budgets.dashboard/budgets.dashboard.js","views/budgets.js","api/user.js","api/budgets.js","api/pageview.js","utils/genID.js","App.js","serviceWorker.js","index.js"],"names":["Notifications","props","useState","style","setStyle","useEffect","setTimeout","display","className","onClick","e","preventDefault","ViewController","currentView","SwitchView","icon","faUser","faMoneyBill","Header","href","target","CustomSpinner","UserInfo","userInfo","userUpdate","Logout","isLoaded","loginStatus","loginMsg","username","password","firstName","lastName","eMail","email","uName","setUName","pWord","setPword","cpWord","setCPword","fName","setFName","lName","setLName","setEmail","isDisabled","setIsDisabled","faAddressCard","type","value","name","disabled","onChange","cpassword","color","fontSize","fontWeight","UserLogin","isSignIn","setIsSign","loginShowPW","setLoginShowPW","SignUpShowPW","setSignUpShowPW","SignUpShowCPW","setSignUpShowCPW","onSubmit","Login","userRegister","placeholder","tabIndex","faLock","faEye","faEyeSlash","User","isUserLogin","UpdateLoginStatus","AddBudgetsForm","title","setTitle","setType","amount","setAmount","note","setNote","setAddMode","SetShowAddBtn","BudgetAdd","Number","budgetStatus","budgetMsg","AddBudget","showAddBtn","addMode","ListBudgetsItem","showOptions","setShowOptions","budget","BudgetUpdate","_id","index","faAngleDown","faEdit","BudgetDelete","tmpID","faTrash","ListBudgets","budgets","map","key","BudgetsDashboard","budgetIncomeTotal","setBudgetIncomeTotal","budgetExpenseTotal","setBudgetExpenseTotal","setUserName","incAmt","expAmt","forEach","b","guestMode","Budgets","apiUsers","localIP","localURL","Url","port","url","this","testUrl","callback","fetchOption","method","headers","body","JSON","stringify","credentials","fetch","then","res","ok","Error","status","json","result","catch","error","ErrorHandler","Register","user","isLogIn","Update","GetInfo","Test","message","apiBudgets","tmpBudgetData","Add","userID","AddMany","GetAll","Delete","apiPageViews","gID","genID","r","Math","floor","random","Date","now","toString","App","setLoginStatus","setLoginMsg","setBudgetStatus","setBudgetMsg","setBudgets","setUserInfo","setIsUserLogin","setIsLoaded","setGuestMode","setCurrentView","firstTimeLogIn","setFirstTimeLogIn","firstTimeBudgetLoad","setFirstTimeBudgetLoad","visited","setVisited","setPageViewRes","useCookies","cookie","setCookie","removeCookie","BudgetGetAll","SaveBudgetToCookies","maxAge","length","val","BudgetAddMany","userinfo","concat","view","prevB","bCopy","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.ba053ba0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './notifications.css';\n\nexport default function Notifications(props) {\n  const delayTimeOut = 10000;\n  const [style, setStyle] = useState({});\n\n  useEffect(() => {\n    setTimeout(() => {\n      setStyle({ display: 'none' });\n    }, delayTimeOut);\n  });\n\n  return (\n    <div style={style} className=\"notifications\">\n      {/* <p>{delaySecs}</p> */}\n      <div className=\"notifications-container\">\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            setStyle({ display: 'none' });\n          }}\n          className=\"notifications-btn-close\"\n        >\n          X\n        </button>\n      </div>\n      <div className=\"notifications-container-msg\">\n        <p>This is a experimental web app. Real emails are not required.</p>\n        <p>Closing in 10 seconds</p>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faMoneyBill } from '@fortawesome/free-solid-svg-icons';\n\nimport './view.controller.css';\n\nexport default function ViewController(props) {\n  return (\n    <div className=\"view-controller\">\n      <div\n        className={\n          props.currentView === 'Users'\n            ? 'view-controller-btn-container view-controller-btn-container-active'\n            : 'view-controller-btn-container'\n        }\n      >\n        <button\n          className=\"view-controller-btn\"\n          onClick={(e) => {\n            e.preventDefault();\n            props.SwitchView('Users');\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} />\n        </button>\n      </div>\n      <div\n        className={\n          props.currentView === 'Budgets'\n            ? 'view-controller-btn-container view-controller-btn-container-active'\n            : 'view-controller-btn-container'\n        }\n      >\n        <button\n          className=\"view-controller-btn\"\n          onClick={(e) => {\n            e.preventDefault();\n            props.SwitchView('Budgets');\n          }}\n        >\n          <FontAwesomeIcon icon={faMoneyBill} />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './header.css';\n\nimport ViewController from '../../views/view.controller.js';\n\nfunction Header(props) {\n  return (\n    <div>\n      <div className=\"header\">\n        <div className=\"header-primary\">\n          <h1>Expense Tracker</h1>\n          <p>\n            Made by{' '}\n            <a href=\"https://github.com/rem029\" target=\"_blank\">\n              rem029\n            </a>{' '}\n          </p>\n        </div>\n        <ViewController SwitchView={props.SwitchView} currentView={props.currentView} />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './custom.spinner.css';\n\nexport default function CustomSpinner(props) {\n  // const [style, setStyle] = useState({});\n  // const [color, setColor] = useState(\"black\");\n\n  // const styleXSM = {\n  // \tborderRadius: \"50%\",\n  // \twidth: \"10px\",\n  // \theight: \"10px\",\n  // \tborderWidth: \"2px\",\n  // \tborderStyle: \"solid\",\n  // };\n\n  // const styleSM = {\n  // \tborderRadius: \"50%\",\n  // \twidth: \"15px\",\n  // \theight: \"15px\",\n  // \tborderWidth: \"5px\",\n  // \tborderStyle: \"solid\",\n  // };\n\n  // const styleMD = {\n  // \tborderRadius: \"50%\",\n  // \twidth: \"30px\",\n  // \theight: \"30px\",\n  // \tborderWidth: \"10px\",\n  // \tborderStyle: \"solid\",\n  // };\n\n  // const styleLG = {\n  // \tborderRadius: \"50%\",\n  // \twidth: \"50px\",\n  // \theight: \"50px\",\n  // \tborderWidth: \"10px\",\n  // \tborderStyle: \"solid\",\n  // };\n\n  // useEffect(() => {\n  // \tif (props.size) {\n  // \t\tswitch (props.size) {\n  // \t\t\tcase \"xsm\":\n  // \t\t\t\tsetStyle(styleXSM);\n  // \t\t\t\tbreak;\n  // \t\t\tcase \"sm\":\n  // \t\t\t\tsetStyle(styleSM);\n  // \t\t\t\tbreak;\n  // \t\t\tcase \"md\":\n  // \t\t\t\tsetStyle(styleMD);\n  // \t\t\t\tbreak;\n  // \t\t\tcase \"lg\":\n  // \t\t\t\tsetStyle(styleLG);\n  // \t\t\t\tbreak;\n  // \t\t\tdefault:\n  // \t\t\t\tsetStyle(styleSM);\n  // \t\t\t\tbreak;\n  // \t\t}\n  // \t} else {\n  // \t\tsetStyle(styleMD);\n  // \t}\n\n  // \tif (props.color) {\n  // \t\tconsole.log(props.color);\n  // \t\tsetColor(props.color);\n  // \t} else {\n  // \t\tsetColor(\"black\");\n  // \t}\n  // }, [props.style, props.color]);\n\n  return (\n    <div>\n      <div className={props.className}></div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAddressCard } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './user.info.css';\r\n\r\nimport CustomSpinner from '../misc/custom.spinner.js';\r\n\r\nexport default function UserInfo({ userInfo, userUpdate, Logout, isLoaded, loginStatus, loginMsg }) {\r\n  const { username, password, firstName, lastName, email: eMail } = userInfo;\r\n  const [uName, setUName] = useState(username);\r\n  const [pWord, setPword] = useState(password);\r\n  const [cpWord, setCPword] = useState(password);\r\n  const [fName, setFName] = useState(firstName);\r\n  const [lName, setLName] = useState(lastName);\r\n  const [email, setEmail] = useState(eMail);\r\n\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n\r\n  const userUpt = () => {\r\n    if (!isDisabled) {\r\n      userUpdate({\r\n        username: uName,\r\n        email: email,\r\n        password: pWord,\r\n        cpassword: cpWord,\r\n        firstName: fName,\r\n        lastName: lName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"user-info\">\r\n        <span>\r\n          <FontAwesomeIcon icon={faAddressCard} />\r\n        </span>\r\n        <h2> User Profile</h2>\r\n        <button\r\n          className=\"user-info-btn\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            Logout();\r\n          }}\r\n        >\r\n          {isLoaded ? 'Log out' : <CustomSpinner className=\"spinner spinner-style-login\" />}\r\n        </button>\r\n        <div className=\"user-info-field\">\r\n          <label>Username</label>\r\n          <input\r\n            type=\"text\"\r\n            value={uName}\r\n            name=\"username\"\r\n            disabled\r\n            onChange={(e) => {\r\n              setUName(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"user-info-field\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            value={email}\r\n            name=\"email\"\r\n            disabled={isDisabled}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"user-info-field\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"text\"\r\n            value={pWord}\r\n            name=\"password\"\r\n            disabled={isDisabled}\r\n            onChange={(e) => {\r\n              setPword(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        {isDisabled !== true && (\r\n          <div className=\"user-info-field\">\r\n            <label>Confirm Password</label>\r\n            <input\r\n              type=\"text\"\r\n              value={cpWord}\r\n              name=\"cpassword\"\r\n              disabled={isDisabled}\r\n              onChange={(e) => {\r\n                setCPword(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"user-info-field\">\r\n          <label>First name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={fName}\r\n            name=\"email\"\r\n            disabled={isDisabled}\r\n            onChange={(e) => {\r\n              setFName(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"user-info-field\">\r\n          <label>Last name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={lName}\r\n            name=\"email\"\r\n            disabled={isDisabled}\r\n            onChange={(e) => {\r\n              setLName(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            className={isLoaded ? 'user-info-btn' : 'user-info-btn user-info-btn-disable'}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              userUpt();\r\n              setIsDisabled(!isDisabled);\r\n            }}\r\n          >\r\n            {isLoaded ? (\r\n              isDisabled ? (\r\n                'Edit Profile'\r\n              ) : (\r\n                'Update'\r\n              )\r\n            ) : (\r\n              <CustomSpinner className=\"spinner spinner-style-login\" />\r\n            )}\r\n          </button>\r\n          <p\r\n            className=\"user-info-msg\"\r\n            style={\r\n              loginStatus\r\n                ? { color: '#457B9D', fontSize: '12px', fontWeight: '300' }\r\n                : { color: '#E63946', fontSize: '12px', fontWeight: '300' }\r\n            }\r\n          >\r\n            {loginMsg}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faLock, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\nimport './user.login.css';\n\nimport CustomSpinner from '../misc/custom.spinner.js';\n\nfunction UserLogin(props) {\n  const [uName, setUName] = useState('');\n  const [pWord, setPword] = useState('');\n  const [cpWord, setCPword] = useState('');\n  const [fName, setFName] = useState('');\n  const [lName, setLName] = useState('');\n  const [email, setEmail] = useState('');\n\n  const [isSignIn, setIsSign] = useState(true);\n\n  const [loginShowPW, setLoginShowPW] = useState(false);\n\n  const [SignUpShowPW, setSignUpShowPW] = useState(false);\n  const [SignUpShowCPW, setSignUpShowCPW] = useState(false);\n\n  const userReg = () => {\n    props.userRegister({\n      username: uName,\n      email: email,\n      password: pWord,\n      cpassword: cpWord,\n      firstName: fName,\n      lastName: lName,\n    });\n  };\n\n  const userLogin = () => {\n    props.Login(uName, pWord);\n  };\n\n  return (\n    <div>\n      <form\n        className=\"user-form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (isSignIn) {\n            userLogin();\n          } else {\n            userReg();\n          }\n        }}\n      >\n        <div className=\"user-form-title\">\n          <h3>XT</h3>\n          <p>Manage your personal expense</p>\n        </div>\n        <div className=\"user-selection\">\n          <button\n            className={isSignIn ? 'user-selection-btn user-selection-btn-active' : 'user-selection-btn'}\n            onClick={(e) => {\n              e.preventDefault();\n              setIsSign(true);\n            }}\n          >\n            Sign in\n          </button>\n          <button\n            className={isSignIn ? 'user-selection-btn' : 'user-selection-btn user-selection-btn-active'}\n            onClick={(e) => {\n              e.preventDefault();\n              setIsSign(false);\n            }}\n          >\n            Sign up\n          </button>\n        </div>\n        <div className=\"user-selection-anim\">\n          <div\n            className={\n              isSignIn ? 'user-selection-anim-orig' : 'user-selection-anim-orig user-selection-anim-orig-right'\n            }\n          ></div>\n        </div>\n        {isSignIn ? (\n          <div className=\"user-login-form\">\n            <div className=\"user-login-form-input-style-username\">\n              <span className=\"user-login-form-input-style-username-icon\">\n                <FontAwesomeIcon icon={faUser} />\n              </span>\n              <input\n                type=\"text\"\n                value={uName}\n                name=\"username\"\n                disabled={props.isDisabled}\n                placeholder=\"Username\"\n                tabIndex={1}\n                onChange={(e) => {\n                  setUName(e.target.value);\n                }}\n              />\n            </div>\n            <div className=\"user-login-form-input-style-password\">\n              <span className=\"user-login-form-input-style-password-icon\">\n                <FontAwesomeIcon icon={faLock} />\n              </span>\n              <input\n                type={loginShowPW ? 'type' : 'password'}\n                name=\"password\"\n                disabled={props.isDisabled}\n                value={pWord}\n                placeholder=\"Password\"\n                tabIndex={2}\n                onChange={(e) => {\n                  setPword(e.target.value);\n                }}\n              />\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  setLoginShowPW(!loginShowPW);\n                }}\n              >\n                {loginShowPW ? <FontAwesomeIcon icon={faEye} /> : <FontAwesomeIcon icon={faEyeSlash} />}\n              </button>\n            </div>\n            <button type=\"submit\" className=\"user-login-form-btn\" tabIndex={3}>\n              {props.isLoaded ? (\n                <span>SIGN IN</span>\n              ) : (\n                <span>\n                  <CustomSpinner className=\"spinner spinner-style-login\" />\n                  Loading...\n                </span>\n              )}\n            </button>\n          </div>\n        ) : (\n          <div className=\"user-signup-form\">\n            <div className=\"user-signup-form-input-info\">Fields with (*) are required.</div>\n            <label>Username *</label>\n            <div className=\"user-signup-form-input-style\">\n              <input\n                type=\"text\"\n                value={uName}\n                name=\"username\"\n                placeholder=\"Username\"\n                disabled={props.isDisabled}\n                onChange={(e) => {\n                  setUName(e.target.value);\n                }}\n              />\n            </div>\n            <label>Email *</label>\n            <div className=\"user-signup-form-input-style\">\n              <input\n                type=\"email\"\n                value={email}\n                name=\"email\"\n                placeholder=\"username@example.com\"\n                disabled={props.isDisabled}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n            </div>\n            <label>Password *</label>\n            <div className=\"user-signup-form-input-style\">\n              <input\n                type={SignUpShowPW ? 'text' : 'password'}\n                value={pWord}\n                name=\"password\"\n                placeholder=\"Password\"\n                disabled={props.isDisabled}\n                onChange={(e) => {\n                  setPword(e.target.value);\n                }}\n              />\n              <button\n                name=\"btn-showpw\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  setSignUpShowPW(!SignUpShowPW);\n                }}\n              >\n                {SignUpShowPW ? <FontAwesomeIcon icon={faEye} /> : <FontAwesomeIcon icon={faEyeSlash} />}\n              </button>\n            </div>\n            <label>Confirm Password *</label>\n            <div className=\"user-signup-form-input-style\">\n              <input\n                type={SignUpShowCPW ? 'text' : 'password'}\n                value={cpWord}\n                name=\"cpassword\"\n                placeholder=\"Confirm Password\"\n                disabled={props.isDisabled}\n                onChange={(e) => {\n                  setCPword(e.target.value);\n                }}\n              />\n              <button\n                name=\"btn-showpw\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  setSignUpShowCPW(!SignUpShowCPW);\n                }}\n              >\n                {SignUpShowCPW ? <FontAwesomeIcon icon={faEye} /> : <FontAwesomeIcon icon={faEyeSlash} />}\n              </button>\n            </div>\n            <label>Full Name</label>\n            <div className=\"user-signup-form-input-style\">\n              <input\n                type=\"text\"\n                value={fName}\n                name=\"firstName\"\n                placeholder=\"First name\"\n                disabled={props.isDisabled}\n                onChange={(e) => {\n                  setFName(e.target.value);\n                }}\n              />\n            </div>\n            <div className=\"user-signup-form-input-style\">\n              <input\n                type=\"text\"\n                value={lName}\n                name=\"lastName\"\n                placeholder=\"Last name\"\n                disabled={props.isDisabled}\n                onChange={(e) => {\n                  setLName(e.target.value);\n                }}\n              />\n            </div>\n            <button type=\"submit\" className=\"user-signup-form-btn\">\n              {props.isLoaded ? (\n                <span>SIGN UP</span>\n              ) : (\n                <span>\n                  <CustomSpinner className=\"spinner spinner-style-login\" />\n                  Loading...\n                </span>\n              )}\n            </button>\n          </div>\n        )}\n        <p style={{ color: props.loginStatus ? '#457B9D' : '#E63946', fontSize: '12px', fontWeight: '300' }}>\n          {props.loginMsg}\n        </p>\n      </form>\n    </div>\n  );\n}\n\nexport default UserLogin;\n","import React from 'react';\n\nimport UserInfo from '../components/user/user.info';\nimport UserLogin from '../components/user/user.login';\n\nimport './user.css';\n\nexport default function User(props) {\n  return (\n    <div className=\"user-view-anim\">\n      {props.isUserLogin ? (\n        <UserInfo\n          userInfo={props.userInfo}\n          Logout={props.Logout}\n          loginStatus={props.loginStatus}\n          loginMsg={props.loginMsg}\n          userUpdate={props.userUpdate}\n          UpdateLoginStatus={props.UpdateLoginStatus}\n          isLoaded={props.isLoaded}\n        />\n      ) : (\n        <UserLogin\n          Login={props.Login}\n          loginStatus={props.loginStatus}\n          loginMsg={props.loginMsg}\n          isLoaded={props.isLoaded}\n          isDisabled={props.isDisabled}\n          userInfo={props.userInfo}\n          userRegister={props.userRegister}\n          UpdateLoginStatus={props.UpdateLoginStatus}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nimport './add.budgets.form.css';\n\nexport default function AddBudgetsForm(props) {\n  const [title, setTitle] = useState('');\n  const [type, setType] = useState('income');\n  const [amount, setAmount] = useState(null);\n  const [note, setNote] = useState('');\n\n  // userInfo={props.userInfo}\n  // isUserLogin={props.isUserLogin}\n  // BudgetAdd={props.BudgetAdd}\n  // budgetStatus={props.budgetStatus}\n  // budgetMsg={props.budgetMsg}\n\n  return (\n    <div className=\"budget-new-form-bg\">\n      <div className=\"budget-new-form\">\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            props.setAddMode(false);\n            props.SetShowAddBtn(true);\n          }}\n          className=\"budget-new-form-btn-close\"\n        >\n          X\n        </button>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            props.setAddMode(false);\n            props.SetShowAddBtn(true);\n            props.BudgetAdd({ title: title, type: type, note: note, amount: amount });\n            // props.setAddMode(false);\n            // props.SetShowAddBtn(true);\n          }}\n        >\n          <div className=\"budget-new-form-field-container\">\n            <div className=\"budget-new-form-field\">\n              {/* <span>*</span>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname=\"type\"\n\t\t\t\t\t\t\t\tvalue={type}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetType(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"type\">Budget Type</option>\n\t\t\t\t\t\t\t\t<option value=\"income\">Income</option>\n\t\t\t\t\t\t\t\t<option value=\"expense\">Expense</option>\n\t\t\t\t\t\t\t</select> */}\n              <div className=\"btn-budget-type-container\">\n                <button\n                  type=\"button\"\n                  className={\n                    type === 'income' ? 'btn-budget-type-inc btn-budget-type-inc-active' : 'btn-budget-type-inc'\n                  }\n                  name=\"btn-budget-type\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setType('income');\n                  }}\n                >\n                  Income\n                </button>\n                <button\n                  type=\"button\"\n                  className={\n                    type === 'expense' ? 'btn-budget-type-exp btn-budget-type-exp-active' : 'btn-budget-type-exp'\n                  }\n                  name=\"btn-budget-type\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setType('expense');\n                  }}\n                >\n                  Expense\n                </button>\n              </div>\n            </div>\n            <div className=\"budget-new-form-field\">\n              <span>*</span>\n              <input\n                type=\"text\"\n                name=\"budgetTitle\"\n                placeholder=\"Title\"\n                value={title}\n                onChange={(e) => {\n                  setTitle(e.target.value);\n                }}\n              ></input>\n            </div>\n            <div className=\"budget-new-form-field\">\n              <span>*</span>\n              <input\n                type=\"number\"\n                name=\"budgetAmount\"\n                placeholder=\"Enter amount\"\n                value={Number(amount)}\n                onChange={(e) => {\n                  setAmount(e.target.value);\n                }}\n              ></input>\n            </div>\n            <div className=\"budget-new-form-field\">\n              <textarea\n                name=\"budgetNote\"\n                placeholder=\"Note\"\n                value={note}\n                onChange={(e) => {\n                  setNote(e.target.value);\n                }}\n              ></textarea>\n            </div>\n            <button type=\"submit\" className=\"budget-new-form-field-btn-add\">\n              Add\n            </button>\n            <p\n              style={props.budgetStatus ? { color: '#fff', fontSize: '12px' } : { color: '#e63946', fontSize: '12px' }}\n            >\n              {props.budgetMsg}\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './add.budgets.button.css';\n\nimport AddBudgetsForm from './add.budgets.form.js';\n\nexport default function AddBudget(props) {\n  return (\n    <div>\n      {props.showAddBtn && (\n        <div className=\"budget-new-container\">\n          <button\n            className=\"budget-new-container-btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              props.setAddMode(true);\n              props.SetShowAddBtn(false);\n            }}\n          >\n            +\n          </button>\n        </div>\n      )}\n      {props.addMode && (\n        <AddBudgetsForm\n          setAddMode={props.setAddMode}\n          userInfo={props.userInfo}\n          isUserLogin={props.isUserLogin}\n          BudgetAdd={props.BudgetAdd}\n          budgetStatus={props.budgetStatus}\n          budgetMsg={props.budgetMsg}\n          SetShowAddBtn={props.SetShowAddBtn}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport './list.budgets.item.css';\n\nfunction ListBudgetsItem(props) {\n  const [showOptions, setShowOptions] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [title, setTitle] = useState(props.budget.title);\n  const [amount, setAmount] = useState(Number(props.budget.amount));\n  return (\n    <div\n      className={\n        isDisabled\n          ? 'list-budget-item list-budget-item-' + props.budget.type\n          : 'list-budget-item list-budget-item-' +\n            props.budget.type +\n            ' ' +\n            'list-budget-item list-budget-item-' +\n            props.budget.type +\n            '-active'\n      }\n    >\n      {/* <label>{props.budget.type}</label> */}\n      <span>\n        <input\n          type=\"text\"\n          value={title}\n          disabled={isDisabled}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        ></input>\n        {/* {props.budget.note.length > 0 && <textarea value={props.budget.note} disabled={isDisabled} rows={4}></textarea>} */}\n      </span>\n      <input\n        type=\"number\"\n        value={amount}\n        disabled={isDisabled}\n        onChange={(e) => {\n          setAmount(e.target.value);\n        }}\n      ></input>\n      <div className=\"list-budget-item-btn-options-container\">\n        <button\n          className={showOptions ? 'list-budget-item-btn list-budget-item-btn-active' : 'list-budget-item-btn'}\n          onClick={(e) => {\n            if (isDisabled) {\n              setShowOptions(!showOptions);\n            } else {\n              //HANDLE UPDATE HERE\n              props.BudgetUpdate(\n                {\n                  _id: props.budget._id,\n                  type: props.budget.type,\n                  note: props.budget.note,\n                  title: title,\n                  amount: amount,\n                },\n                props.index\n              );\n              setIsDisabled(true);\n            }\n          }}\n        >\n          {isDisabled ? <FontAwesomeIcon icon={faAngleDown} /> : <FontAwesomeIcon icon={faEdit} />}\n        </button>\n        {showOptions && (\n          <div className=\"list-budget-item-btn-options\">\n            <button\n              onClick={(e) => {\n                setShowOptions(false);\n                setIsDisabled(false);\n                // props.SetShowAddBtn(true);\n              }}\n            >\n              <FontAwesomeIcon icon={faEdit} />\n              <span>EDIT</span>\n            </button>\n            <div></div>\n            <button\n              onClick={(e) => {\n                setShowOptions(false);\n                props.BudgetDelete(\n                  {\n                    _id: props.budget._id,\n                    type: props.budget.type,\n                    note: props.budget.note,\n                    title: title,\n                    amount: amount,\n                  },\n                  props.budget.tmpID\n                );\n              }}\n            >\n              <FontAwesomeIcon icon={faTrash} />\n              <span>DELETE</span>\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ListBudgetsItem;\n","import React from 'react';\n\nimport './list.budgets.css';\n\nimport ListBudgetsItem from './list.budgets.item';\nimport CustomSpinner from '../../misc/custom.spinner';\n\nexport default function ListBudgets(props) {\n  return (\n    <div className=\"list-budgets\">\n      {props.isLoaded ? (\n        <ul>\n          {props.budgets !== null ? (\n            props.budgets.map((budget, index) => {\n              return (\n                <li key={index}>\n                  <ListBudgetsItem\n                    index={index}\n                    budget={budget}\n                    SetShowAddBtn={props.SetShowAddBtn}\n                    BudgetUpdate={props.BudgetUpdate}\n                    BudgetDelete={props.BudgetDelete}\n                  />\n                </li>\n              );\n            })\n          ) : (\n            <p>Add a Budget</p>\n          )}\n        </ul>\n      ) : (\n        <div>\n          <CustomSpinner className=\"spinner spinner-style-budgets-view\" />\n          <span>Loading...</span>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport CustomSpinner from '../../misc/custom.spinner';\n\nimport './budgets.dashboard.css';\n\nfunction BudgetsDashboard(props) {\n  const [budgetIncomeTotal, setBudgetIncomeTotal] = useState(0);\n  const [budgetExpenseTotal, setBudgetExpenseTotal] = useState(0);\n\n  const [username, setUserName] = useState('');\n  useEffect(() => {\n    if (props.budgets !== null) {\n      let incAmt = 0;\n      let expAmt = 0;\n      setBudgetIncomeTotal(0);\n      setBudgetExpenseTotal(0);\n      props.budgets.forEach((b) => {\n        if (b.type === 'income') {\n          incAmt = incAmt + Number(b.amount);\n          setBudgetIncomeTotal(incAmt);\n        } else if (b.type === 'expense') {\n          expAmt = expAmt + Number(b.amount);\n          setBudgetExpenseTotal(Number(expAmt));\n        }\n      });\n    } else {\n      setBudgetIncomeTotal(0);\n      setBudgetExpenseTotal(0);\n    }\n    if (props.guestMode) {\n      setUserName('Guest');\n    } else {\n      if (props.userInfo) {\n        setUserName(props.userInfo.username);\n      } else {\n        setUserName('ERROR');\n      }\n    }\n  }, [props.budgets, props.guestMode, props.userInfo]);\n\n  return (\n    <div className=\"budget-dashboard-container\">\n      <div className=\"budget-dashboard-header\">\n        <h2>\n          Hello,{' '}\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              props.SwitchView('Users');\n            }}\n          >\n            {props.isLoaded ? <span>{username}</span> : <CustomSpinner className=\"spinner spinner-style-dashboard\" />}\n          </button>\n          !\n        </h2>\n        {props.guestMode && (\n          <p>\n            <button\n              onClick={(e) => {\n                e.preventDefault();\n                props.SwitchView('Users');\n              }}\n            >\n              Log in or Sign up\n            </button>{' '}\n            to save your data. <b>Its FREE</b>\n          </p>\n        )}\n      </div>\n      <div className=\"budget-dashboard-box-container\">\n        <div className=\"budget-dashboard-box budget-dashboard-box-income\">\n          <h3>Income</h3>\n          <p>{Number(budgetIncomeTotal)}</p>\n        </div>\n        <div className=\"budget-dashboard-box budget-dashboard-box-expense\">\n          <h3>Expense</h3>\n          <p>{Number(budgetExpenseTotal)}</p>\n        </div>\n        <div className=\"budget-dashboard-box budget-dashboard-box-balance\">\n          <h3>Balance</h3>\n          <p>{Number(budgetIncomeTotal - budgetExpenseTotal)}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BudgetsDashboard;\n","import React, { useState } from 'react';\n\nimport './budgets.css';\n\nimport AddBudgetsButton from '../components/budgets/add.budgets/add.budgets.button';\nimport ListBudgets from '../components/budgets/list.budgets/list.budgets';\nimport BudgetsDashboard from '../components/budgets/budgets.dashboard/budgets.dashboard';\n\nexport default function Budgets(props) {\n  const [addMode, setAddMode] = useState(false);\n  const [showAddBtn, SetShowAddBtn] = useState(true);\n  return (\n    <div className=\"budget-view-anim\">\n      <BudgetsDashboard\n        guestMode={props.guestMode}\n        budgets={props.budgets}\n        userInfo={props.userInfo}\n        isUserLogin={props.isUserLogin}\n        SwitchView={props.SwitchView}\n        isLoaded={props.isLoaded}\n      />\n      <ListBudgets\n        budgets={props.budgets}\n        setAddMode={setAddMode}\n        SetShowAddBtn={SetShowAddBtn}\n        isLoaded={props.isLoaded}\n        BudgetUpdate={props.BudgetUpdate}\n        BudgetDelete={props.BudgetDelete}\n      />\n      <AddBudgetsButton\n        userInfo={props.userInfo}\n        isUserLogin={props.isUserLogin}\n        BudgetAdd={props.BudgetAdd}\n        budgetStatus={props.budgetStatus}\n        budgetMsg={props.budgetMsg}\n        guestMode={props.guestMode}\n        setAddMode={setAddMode}\n        addMode={addMode}\n        SetShowAddBtn={SetShowAddBtn}\n        showAddBtn={showAddBtn}\n      />\n    </div>\n  );\n}\n","const apiUsers = {\n  localIP: 'http://192.168.100.12',\n  localURL: 'http://localhost:5000/api/users',\n  Url: 'https://infinite-sea-11156.herokuapp.com/api/users',\n  port: 5000,\n  url: function () {\n    // return this.localIP + \":\" + this.port + \"/api/users\";\n    // return this.localURL;\n    return this.Url;\n  },\n  testUrl: 'http://localhost:5000/testglobal',\n  //LOGIN\n  Login: function (username, password, callback) {\n    const url = this.url() + '/login';\n    const fetchOption = {\n      method: 'POST',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //USER REGISTER\n  Register: function (user, callback) {\n    const url = this.url() + '/register';\n    const fetchOption = {\n      method: 'PUT',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify({\n        username: user.username,\n        password: user.password,\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        isLogIn: true,\n      }),\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //UPDATE USER\n  Update: function (user, callback) {\n    const url = this.url() + '/update';\n    const fetchOption = {\n      method: 'POST',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify({\n        username: user.username,\n        password: user.password,\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        isLogIn: true,\n      }),\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //GET INFO USER\n  GetInfo: function (username, callback) {\n    const url = this.url() + '/' + username;\n    const fetchOption = {\n      method: 'GET',\n      headers: { 'Content-type': 'application/json' },\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //USER LOGOUT\n  Logout: function (callback) {\n    const url = this.url() + '/logout';\n    const fetchOption = {\n      method: 'POST',\n      headers: { 'Content-type': 'application/json' },\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //TEST API\n  Test: function (callback) {\n    const fetchOption = {\n      method: 'GET',\n      headers: { 'Content-type': 'application/json' },\n      credentials: 'include',\n    };\n\n    fetch(this.testUrl, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //INTERNAL ERROR HANDLER\n  ErrorHandler: function (error, callback) {\n    if (error.message === '401') {\n      callback({ status: false, message: 'Login Unsuccessful' });\n    } else if ((error.message = 'Failed to fetch')) {\n      callback({ status: false, message: 'Unable to contact server' });\n    } else {\n      callback({ status: false, message: 'Contact Developer' });\n    }\n  },\n};\n\nexport default apiUsers;\n","const apiBudgets = {\n  localIP: 'http://192.168.100.12',\n  localURL: 'http://localhost:5000/api/budgets',\n  Url: 'https://infinite-sea-11156.herokuapp.com/api/budgets',\n  port: 5000,\n  tmpBudgetData: [],\n  url: function () {\n    // return this.localIP + \":\" + this.port + \"/api/budgets\";\n    // return this.localURL;\n    return this.Url;\n  },\n  //ADD BUDGET\n  Add: function (budget, callback) {\n    const url = this.url() + '/add';\n    const fetchOption = {\n      method: 'PUT',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify({\n        username: budget.username,\n        userID: budget.userID,\n        type: budget.type,\n        title: budget.title,\n        note: budget.note,\n        amount: budget.amount,\n      }),\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //ADD BUDGET\n  AddMany: function (userInfo, budgets, callback) {\n    const url = this.url() + '/addmany';\n    const fetchOption = {\n      method: 'PUT',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify({\n        username: userInfo.username,\n        userID: userInfo._id,\n        budgets: budgets,\n      }),\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //GET ALL BUDGET BY USERNAME\n  GetAll: function (username, callback) {\n    const url = this.url() + '/' + username;\n    const fetchOption = {\n      method: 'GET',\n      headers: { 'Content-type': 'application/json' },\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //UPDATE BUDGET\n  Update: function (budget, callback) {\n    const url = this.url() + '/update';\n    const fetchOption = {\n      method: 'POST',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify({\n        _id: budget._id,\n        username: budget.username,\n        userID: budget.userID,\n        type: budget.type,\n        title: budget.title,\n        note: budget.note,\n        amount: budget.amount,\n      }),\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //DELETE BUDGET\n  Delete: function (budget, callback) {\n    const url = this.url() + '/delete';\n    const fetchOption = {\n      method: 'DELETE',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify({\n        _id: budget._id,\n        username: budget.username,\n      }),\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //INTERNAL ERROR HANDLER\n  ErrorHandler: function (error, callback) {\n    if (error.message === '401') {\n      callback({ status: false, message: 'Login Unsuccessful' });\n    } else if ((error.message = 'Failed to fetch')) {\n      callback({ status: false, message: 'Unable to contact server' });\n    } else {\n      callback({ status: false, message: 'Contact Developer' });\n    }\n  },\n};\n\nexport default apiBudgets;\n","const apiPageViews = {\n  localIP: 'http://192.168.100.12',\n  localURL: 'http://localhost:5000/api/pageviews',\n  Url: 'https://infinite-sea-11156.herokuapp.com/api/pageviews',\n  port: 5000,\n  url: function () {\n    // return this.localIP + \":\" + this.port + \"/api/pageviews\";\n    // return this.localURL;\n    return this.Url;\n  },\n  testUrl: 'http://localhost:5000/testglobal',\n  Add: function (callback) {\n    const url = this.url() + '/add';\n    const fetchOption = {\n      method: 'PUT',\n      headers: { 'Content-type': 'application/json' },\n      credentials: 'include',\n    };\n\n    fetch(url, fetchOption)\n      .then((res) => {\n        if (res.ok) {\n          res.json().then((result) => {\n            callback(result);\n          });\n        } else {\n          throw new Error(res.status);\n        }\n      })\n      .catch((error) => {\n        this.ErrorHandler(error, (result) => {\n          callback(result);\n        });\n      });\n  },\n  //INTERNAL ERROR HANDLER\n  ErrorHandler: function (error, callback) {\n    if (error.message === '401') {\n      callback({ status: false, message: 'Login Unsuccessful' });\n    } else if ((error.message = 'Failed to fetch')) {\n      callback({ status: false, message: 'Unable to contact server' });\n    } else {\n      callback({ status: false, message: 'Contact Developer' });\n    }\n  },\n};\n\nexport default apiPageViews;\n","let gID = 0;\n\nexport default function genID() {\n  gID++;\n  const r = Math.floor(Math.random() * 100);\n  const result = gID + r + Date.now();\n  return result.toString();\n}\n","import React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport './App.css';\n\nimport Notifications from './components/misc/notifications';\nimport Header from './components/header/header';\nimport User from './views/user';\nimport Budgets from './views/budgets';\n\nimport apiUsers from './api/user';\nimport apiBudgets from './api/budgets';\nimport apiPageViews from './api/pageview.js';\n\nimport genID from './utils/genID.js';\n\nfunction App() {\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [loginMsg, setLoginMsg] = useState('');\n  const [budgetStatus, setBudgetStatus] = useState(false);\n  const [budgetMsg, setBudgetMsg] = useState('');\n  // const [budgets, setBudgets] = useState(apiBudgets.tmpBudgetData);\n  const [budgets, setBudgets] = useState([]);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isUserLogin, setIsUserLogin] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(true);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [guestMode, setGuestMode] = useState(true);\n  const [currentView, setCurrentView] = useState('Budgets');\n  const [firstTimeLogIn, setFirstTimeLogIn] = useState(false);\n  const [firstTimeBudgetLoad, setFirstTimeBudgetLoad] = useState(false);\n  const [visited, setVisited] = useState(false);\n  const [pageViewRes, setPageViewRes] = useState({});\n\n  const [cookie, setCookie, removeCookie] = useCookies(['budget']);\n\n  useEffect(() => {\n    if (!firstTimeLogIn) {\n      Login('RELOG', 'RELOG');\n    }\n\n    if (guestMode) {\n      if (cookie.budget) {\n        setBudgets(cookie.budget);\n      }\n    } else {\n      if (!firstTimeBudgetLoad) {\n        BudgetGetAll();\n      }\n      setFirstTimeBudgetLoad(true);\n    }\n\n    if (!visited) {\n      apiPageViews.Add((result) => {\n        setPageViewRes(result);\n      });\n      setVisited(true);\n    }\n\n    setFirstTimeLogIn(true);\n  }, [budgets, guestMode, userInfo]);\n\n  //COOKIES\n  const SaveBudgetToCookies = (budgets) => {\n    setCookie('budget', JSON.stringify(budgets), { maxAge: 1000 * 60 * 24 });\n  };\n\n  //USER FUNCTIONS\n  const Login = (username, password) => {\n    //Execute only if not blank\n    if (username.length > 0 && password.length > 0) {\n      setIsLoaded(false);\n      setIsDisabled(true);\n      apiUsers.Login(username, password, (result) => {\n        //handle response here\n        setLoginStatus(result.status);\n        setLoginMsg(result.message);\n\n        setUserInfo((val) => {\n          if (result.user) {\n            return result.user;\n          } else {\n            //IF USER IS NULL\n            return null;\n          }\n        });\n        setIsUserLogin(result.status);\n\n        if (result.status === true) {\n          setGuestMode(false);\n          if (cookie.budget) {\n            if (cookie.budget.length > 0) {\n              BudgetAddMany(result.user, cookie.budget);\n              removeCookie('budget');\n            }\n          } else {\n          }\n          SwitchView('Budgets');\n        } else {\n          setGuestMode(true);\n        }\n\n        setIsLoaded(true);\n        setIsDisabled(false);\n      });\n    } else {\n      setLoginStatus(false);\n      setLoginMsg('Username or password is blank');\n    }\n  };\n\n  const userRegister = (user) => {\n    setIsLoaded(false);\n    setIsDisabled(true);\n    if (user.username.length > 0 || user.email.length > 0) {\n      if (user.password === user.cpassword) {\n        apiUsers.Register(user, (result) => {\n          //handle response here\n          if (result.status) {\n            Login(user.username, user.password);\n          } else {\n            setLoginStatus(result.status);\n            setIsUserLogin(result.status);\n            setLoginMsg(result.message);\n            setIsLoaded(true);\n            setIsDisabled(false);\n          }\n        });\n      } else {\n        setLoginStatus(false);\n        setLoginMsg('Password doest not match');\n        setIsLoaded(true);\n        setIsDisabled(false);\n      }\n    } else {\n      setLoginStatus(false);\n      setLoginMsg('Fields with (*) are required.');\n      setIsLoaded(true);\n      setIsDisabled(false);\n    }\n  };\n\n  const userUpdate = (user) => {\n    if (user.username.length > 0 && user.password.length > 0 && user.cpassword.length > 0 && user.email.length > 0) {\n      if (user.password === user.cpassword) {\n        setIsLoaded(false);\n        setIsDisabled(true);\n        apiUsers.Update(user, (result) => {\n          setLoginStatus(result.status);\n          setLoginMsg(result.message);\n          if (result.user) {\n            setUserInfo(result.user);\n          }\n          setIsLoaded(true);\n          setIsDisabled(false);\n        });\n      } else {\n        setLoginStatus(false);\n        setLoginMsg('Please confirm your password');\n        setIsLoaded(true);\n        setIsDisabled(false);\n      }\n    } else {\n      setLoginStatus(false);\n      setLoginMsg('Username, email or password is blank');\n      setIsLoaded(true);\n      setIsDisabled(false);\n    }\n  };\n\n  const Logout = () => {\n    setIsLoaded(false);\n    setIsDisabled(true);\n    apiUsers.Logout((res) => {\n      setLoginStatus(res.status);\n      setLoginMsg(res.message);\n      setIsLoaded(true);\n      setIsDisabled(false);\n      setIsUserLogin(false);\n      setUserInfo(null);\n      setBudgets([]);\n      setGuestMode(true);\n      setFirstTimeBudgetLoad(false);\n    });\n  };\n\n  const UpdateLoginStatus = (result) => {\n    setLoginStatus(result.status);\n    setLoginMsg(result.message);\n  };\n\n  const BudgetAdd = (budget) => {\n    if (userInfo !== null && isUserLogin) {\n      if (budget.type.length > 0 && budget.title.length > 0 && budget.type.length !== 'type') {\n        setIsLoaded(false);\n        setIsDisabled(true);\n        budget = { ...budget, ...{ username: userInfo.username, userID: userInfo._id } };\n        apiBudgets.Add(budget, (result) => {\n          setBudgetStatus(result.status);\n          setBudgetMsg(result.message);\n          if (result.budgets) {\n            setBudgets(result.budgets);\n          } else {\n            setBudgets(null);\n          }\n          setIsLoaded(true);\n          setIsDisabled(false);\n        });\n      } else {\n        setIsLoaded(true);\n        setIsDisabled(false);\n        setBudgetMsg('Fields with (*) are require and cannot be blank.');\n        setBudgetStatus(false);\n      }\n    } else {\n      if (guestMode) {\n        if (budget.type.length > 0 && budget.title.length > 0 && budget.type.length !== 'type') {\n          budget = { ...budget, ...{ username: 'guest', userID: 'guest', tmpID: genID() } };\n          setBudgets((prevB) => {\n            SaveBudgetToCookies(prevB.concat(budget));\n            return prevB.concat(budget);\n          });\n          setBudgetMsg('Successfully added as Guest');\n          setBudgetStatus(true);\n        } else {\n          setBudgetMsg('Fields with (*) are require and cannot be blank.');\n          setBudgetStatus(false);\n        }\n      } else {\n        setBudgetMsg('User is not logged in.');\n        setBudgetStatus(false);\n      }\n      setIsLoaded(true);\n      setIsDisabled(false);\n    }\n  };\n\n  const BudgetAddMany = (userinfo, budgets) => {\n    if (userinfo !== null) {\n      setIsLoaded(false);\n      setIsDisabled(true);\n\n      apiBudgets.tmpBudgetData = [];\n\n      budgets.forEach((budget) => {\n        delete budget.tmpID;\n        apiBudgets.tmpBudgetData = apiBudgets.tmpBudgetData.concat(budget);\n      });\n\n      apiBudgets.AddMany(userinfo, apiBudgets.tmpBudgetData, (result) => {\n        setBudgetStatus(result.status);\n        setBudgetMsg(result.message);\n        if (result.budgets) {\n          setBudgets(result.budgets);\n        } else {\n          setBudgets(null);\n        }\n        setIsLoaded(true);\n        setIsDisabled(false);\n      });\n\n      setIsLoaded(true);\n      setIsDisabled(false);\n      setBudgetMsg('Fields with (*) are require and cannot be blank.');\n      setBudgetStatus(false);\n    } else {\n      setIsLoaded(true);\n      setIsDisabled(false);\n    }\n  };\n\n  const BudgetUpdate = (budget, index) => {\n    if (userInfo !== null && isUserLogin) {\n      setIsLoaded(false);\n      setIsDisabled(true);\n      budget = { ...budget, ...{ username: userInfo.username, userID: userInfo._id } };\n      apiBudgets.Update(budget, (result) => {\n        setBudgetStatus(result.status);\n        setBudgetMsg(result.message);\n        if (result.budgets) {\n          setBudgets(result.budgets);\n        } else {\n          setBudgets(null);\n        }\n        setIsLoaded(true);\n        setIsDisabled(false);\n      });\n    } else {\n      if (guestMode) {\n        let copyBudgets = budgets;\n        copyBudgets[index] = budget;\n        setBudgets((prevB) => {\n          prevB[index] = budget;\n          SaveBudgetToCookies(prevB);\n          return prevB;\n        });\n        setBudgetMsg('Successfully updated as Guest');\n        setBudgetStatus(true);\n      } else {\n        setBudgetMsg('User is not logged in.');\n        setBudgetStatus(false);\n      }\n      setIsLoaded(true);\n      setIsDisabled(false);\n    }\n  };\n\n  const BudgetDelete = (budget, tmpID) => {\n    if (userInfo !== null && isUserLogin) {\n      setIsLoaded(false);\n      setIsDisabled(true);\n      budget = { ...budget, ...{ username: userInfo.username } };\n\n      apiBudgets.Delete(budget, (result) => {\n        setBudgetStatus(result.status);\n        setBudgetMsg(result.message);\n\n        if (result.budgets) {\n          setBudgets(result.budgets);\n        } else {\n          setBudgets(null);\n        }\n        setIsLoaded(true);\n        setIsDisabled(false);\n      });\n    } else {\n      if (guestMode) {\n        setBudgets((prevB) => {\n          let bCopy = prevB.filter((b) => {\n            return b.tmpID !== tmpID;\n          });\n          SaveBudgetToCookies(bCopy);\n          return bCopy;\n        });\n        setBudgetMsg('Successfully deleted as Guest');\n        setBudgetStatus(true);\n      } else {\n        setBudgetMsg('User is not logged in.');\n        setBudgetStatus(false);\n      }\n      setIsLoaded(true);\n      setIsDisabled(false);\n    }\n  };\n\n  const BudgetGetAll = () => {\n    //Execute only if not blank\n    if (userInfo !== null && isUserLogin) {\n      setIsLoaded(false);\n      setIsDisabled(true);\n      apiBudgets.GetAll(userInfo.username, (result) => {\n        //handle response here\n        setBudgetStatus(result.status);\n        setBudgetMsg(result.message);\n        if (result.budgets) {\n          setBudgets(result.budgets);\n        } else {\n          setBudgets(null);\n        }\n        //SET LOADED TRUE ONCE CALLBACK DONE\n        setIsLoaded(true);\n        setIsDisabled(false);\n      });\n    } else {\n      if (guestMode) {\n        if (cookie.budget) {\n          setBudgets(cookie.budget);\n        }\n        setBudgetStatus(true);\n        setBudgetMsg('You are in Guest Mode.');\n      } else {\n        setBudgets(null);\n        setBudgetStatus(false);\n        setBudgetMsg('User info is null');\n      }\n    }\n  };\n\n  // const UpdateNotifications = (notificationsNew) => {\n  // \tsetNotifications(notificationsNew.filter((val) => val.show === true));\n  // };\n\n  // const AddNotifications = (notificationsNew) => {\n  // \tsetNotifications(notifications.concat(notificationsNew));\n  // };\n\n  //**********************************************/\n\n  const SwitchView = (view) => {\n    if (!view) {\n      if (currentView === 'Users') {\n        setCurrentView('Budgets');\n      } else {\n        setCurrentView('Users');\n      }\n    } else {\n      if (view === 'Budgets') {\n        BudgetGetAll();\n      }\n      setCurrentView(view);\n    }\n  };\n\n  return (\n    <div>\n      <Header SwitchView={SwitchView} currentView={currentView} />\n      <div className=\"container-main\">\n        <Notifications />\n        {currentView === 'Users' && (\n          <User\n            Login={Login}\n            loginStatus={loginStatus}\n            loginMsg={loginMsg}\n            isLoaded={isLoaded}\n            isDisabled={isDisabled}\n            userInfo={userInfo}\n            userRegister={userRegister}\n            Logout={Logout}\n            isUserLogin={isUserLogin}\n            UpdateLoginStatus={UpdateLoginStatus}\n            userUpdate={userUpdate}\n          />\n        )}\n        {currentView === 'Budgets' && (\n          <Budgets\n            userInfo={userInfo}\n            isUserLogin={isUserLogin}\n            guestMode={guestMode}\n            SwitchView={SwitchView}\n            isLoaded={isLoaded}\n            BudgetUpdate={BudgetUpdate}\n            BudgetDelete={BudgetDelete}\n            BudgetAdd={BudgetAdd}\n            budgetStatus={budgetStatus}\n            budgetMsg={budgetMsg}\n            budgets={budgets}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}